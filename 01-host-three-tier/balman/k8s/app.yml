apiVersion: apps/v1
kind: Deployment
metadata:
  name: todolist-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: todolist-app
      role: backend
  template:
    metadata:
      labels:
        app: todolist-app
        role: backend
    spec:
      containers:
        - name: todolist
          image: balman/todolist:v2
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: postgres-config
          # resources:
          #   requests:
          #     memory: "200MiB"
          #   limits:
          #     memory: "150MiB"
---
apiVersion: v1
kind: Service
metadata:
  name: todolist-app
  labels:
    app: todolist-app
    role: backend
spec:
  type: LoadBalancer
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: todolist-app
    role: backend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    kubernetes.io/ingress.class: alb #if need to spin ALB from aws loadbalancer controller
    alb.ingress.kubernetes.io/target-type: instance #to use instance type as target for ALB, to make use of this target-type you k8s service either needs to specify type as NodePort or LoadBalancer
    alb.ingress.kubernetes.io/group.name: cka # if you want to share ALB with ingress
    alb.ingress.kubernetes.io/jpt.name: my-custom-thing
#   alb.ingress.kubernetes.io/ip-address-type: dualstack #if need to make use of IPV6 apps
#     alb.ingress.kubernetes.io/target-type: ip # If you want to assign ALB target type as IP. The IP target type is required when target pods are running on Fargate.
#     alb.ingress.kubernetes.io/tags # for specifying tags
#     alb.ingress.kubernetes.io/group.order: '10' to specify the priority of the ingress, by default it is set to zero.
  name: todolist-app
  labels:
    app: todolist-app
    role: ingress
spec:
  # ingressClassName: alb # either provide annotations or provide this property
  rules:
    - http:
        paths:
          - backend:
              service:
                name: todolist-app
                port:
                  number: 3000
            path: /todo
            pathType: Prefix
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: todolist-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: todolist-app
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 10
  # metrics:
  #   - type: Resource
  #     resource:
  #       name: cpu
  #       target:
  #         type: Utilization
  #         averageUtilization: 10
